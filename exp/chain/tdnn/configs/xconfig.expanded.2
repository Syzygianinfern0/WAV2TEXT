# This file was created by the command:
# steps/nnet3/xconfig_to_configs.py --xconfig-file exp/chain/tdnn1a_sp/configs/network.xconfig --config-dir exp/chain/tdnn1a_sp/configs/
# It contains the same content as ./xconfig but it was parsed,
# default config values were set, 
# and Descriptors (input=xxx) were normalized.
# See also ./xconfig.expanded.1

input name=ivector dim=100
input name=input dim=40
fixed-affine-layer name=lda affine-transform-file=exp/chain/tdnn1a_sp/configs/lda.mat delay=0 dim=300 input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2), ReplaceIndex(ivector, t, 0)) write-init-config=True
relu-renorm-layer name=tdnn1 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=512 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=lda l2-regularize= learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
relu-renorm-layer name=tdnn2 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=512 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(tdnn1, -1), tdnn1, Offset(tdnn1, 1)) l2-regularize= learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
relu-renorm-layer name=tdnn3 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=512 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(tdnn2, -1), tdnn2, Offset(tdnn2, 1)) l2-regularize= learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
relu-renorm-layer name=tdnn4 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=512 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(tdnn3, -3), tdnn3, Offset(tdnn3, 3)) l2-regularize= learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
relu-renorm-layer name=tdnn5 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=512 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(tdnn4, -3), tdnn4, Offset(tdnn4, 3)) l2-regularize= learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
relu-renorm-layer name=tdnn6 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=512 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(tdnn5, -6), Offset(tdnn5, -3), tdnn5) l2-regularize= learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
relu-renorm-layer name=prefinal-chain add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=512 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=tdnn6 l2-regularize= learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=0.5
output-layer name=output bias-stddev=0.0 bottleneck-dim=-1 dim=3016 include-log-softmax=False input=prefinal-chain l2-regularize= learning-rate-factor= max-change=1.5 ng-affine-options= ng-linear-options= objective-type=linear orthonormal-constraint=1.0 output-delay=0 param-stddev=0.0
relu-renorm-layer name=prefinal-xent add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=512 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=tdnn6 l2-regularize= learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=0.5
output-layer name=output-xent bias-stddev=0.0 bottleneck-dim=-1 dim=3016 include-log-softmax=True input=prefinal-xent l2-regularize= learning-rate-factor=5.0 max-change=1.5 ng-affine-options= ng-linear-options= objective-type=linear orthonormal-constraint=1.0 output-delay=0 param-stddev=0.0
